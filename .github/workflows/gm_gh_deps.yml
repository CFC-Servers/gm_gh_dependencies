name: "Gmod Github Dependencies"

on:
  workflow_call:
    inputs:
      config-file:
        type: string
        description: "Path to the dependency config YAML"
        default: "gm_dependencies.yml"
        required: false

      input-branch:
        type: string
        description: "Which branch to merge dependencies into"
        default: ${{ github.event.repository.default_branch }}
        required: false

      output-branch:
        type: string
        description: "Which branch to force-push the merged dependency code to"
        default: "with-deps"
        required: false

jobs:
  obfuscate:
    name: "Resolve Dependencies"
    runs-on: ubuntu-18.04

    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          path: project
          ref: ${{ inputs.input-branch }}
          fetch-depth: 0

      - name: "Install YQ"
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.20.2/yq_linux_amd64 -O /usr/bin/yq &&\
          chmod +x /usr/bin/yq

      - name: "Merge dependencies"
        run: |
          cd "$GITHUB_WORKSPACE/";
          while IFS=$'\t' read -r url branch _; do
            echo "Cloning $url@$branch";
            git clone --no-tags "$url" --single-branch --branch "$branch" working;

            echo "Removing git dirs";
            rm -rfv ./working/.git*;

            echo "Removing top-level files";
            find ./working -maxdepth 1 -type f -exec rm -fv {} \;

            echo "Moving contents into root";
            cp -r ./working/* ./project/;

            echo "Removing working dir";
            rm -rfv ./working;
          done < <(yq e '.dependencies[] | [.url, .branch] | @tsv' ./project/${{ inputs.config-file }})

      - name: "Git status"
        run: |
          cd "$GITHUB_WORKSPACE/project"
          git status

      - name: "Remove .github"
        run: |
          cd "$GITHUB_WORKSPACE/project"
          rm -rfv .github

      - name: "Create VERSION file"
        run: |
          cd "$GITHUB_WORKSPACE/project"
          echo -e "${{ github.sha }}" > VERSION

      - name: Stage commit
        run: |
          cd "$GITHUB_WORKSPACE/project"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Dependency update"

      - name: Push to branch
        run: |
          cd "$GITHUB_WORKSPACE/project"
          git push -f origin "HEAD:${{ inputs.output-branch }}"
